<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/FBRequestConnection.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/FBRequestConnection</TokenIdentifier>
			<Abstract type="html">@class FBRequestConnection</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>
			
			<NodeRef refid="27"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/init</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/initWithTimeout:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTimeout:(NSTimeInterval)timeout</Declaration>
			<Parameters>
				<Parameter>
					<Name>timeout</Name>
					<Abstract type="html">The NSTimeInterval (seconds) to wait for a response before giving up.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithTimeout:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/setUrlRequest:</TokenIdentifier>
			<Abstract type="html">@abstract
The request that will be sent to the server.</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSMutableURLRequest *urlRequest</Declaration>
			
			
			<Anchor>//api/name/urlRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/FBRequestConnection/urlRequest</TokenIdentifier>
			<Abstract type="html">@abstract
The request that will be sent to the server.</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSMutableURLRequest *urlRequest</Declaration>
			
			
			<Anchor>//api/name/urlRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/setUrlResponse:</TokenIdentifier>
			<Abstract type="html">@abstract
The raw response that was returned from the server.  (readonly)</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) NSHTTPURLResponse *urlResponse</Declaration>
			
			
			<Anchor>//api/name/urlResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/FBRequestConnection/urlResponse</TokenIdentifier>
			<Abstract type="html">@abstract
The raw response that was returned from the server.  (readonly)</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) NSHTTPURLResponse *urlResponse</Declaration>
			
			
			<Anchor>//api/name/urlResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/addRequest:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (void)addRequest:(FBRequest *)request completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A request to be included in the round-trip when start is called.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">A handler to call back when the round-trip completes or times out.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addRequest:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/addRequest:completionHandler:batchEntryName:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (void)addRequest:(FBRequest *)request completionHandler:(FBRequestHandler)handler batchEntryName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A request to be included in the round-trip when start is called.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">A handler to call back when the round-trip completes or times out.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">An optional name for this request.  This can be used to feed
the results of one request to the input of another FBRequest in the same
FBRequestConnection as described in
[Graph API Batch Requests]( https://developers.facebook.com/docs/reference/api/batch/ ).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addRequest:completionHandler:batchEntryName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/start</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (void)start</Declaration>
			
			
			<Anchor>//api/name/start</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/cancel</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (void)cancel</Declaration>
			
			
			<Anchor>//api/name/cancel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForMeWithCompletionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForMeWithCompletionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForMeWithCompletionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForMyFriendsWithCompletionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForMyFriendsWithCompletionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForMyFriendsWithCompletionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForUploadPhoto:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForUploadPhoto:(UIImage *)photo completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>photo</Name>
					<Abstract type="html">A UIImage for the photo to upload.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForUploadPhoto:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPostStatusUpdate:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPostStatusUpdate:(NSString *)message completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">The message to post.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPostStatusUpdate:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPostStatusUpdate:place:tags:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPostStatusUpdate:(NSString *)message place:(id)place tags:(id&lt;NSFastEnumeration&gt;)tags completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">The message to post.</Abstract>
				</Parameter><Parameter>
					<Name>place</Name>
					<Abstract type="html">The place to checkin with, or nil. Place may be an fbid or a
graph object representing a place.</Abstract>
				</Parameter><Parameter>
					<Name>tags</Name>
					<Abstract type="html">Array of friends to tag in the status update, each element
may be an fbid or a graph object representing a user.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPostStatusUpdate:place:tags:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPlacesSearchAtCoordinate:(CLLocationCoordinate2D)coordinate radiusInMeters:(NSInteger)radius resultsLimit:(NSInteger)limit searchText:(NSString *)searchText completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>coordinate</Name>
					<Abstract type="html">The search coordinates.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The search radius in meters.</Abstract>
				</Parameter><Parameter>
					<Name>limit</Name>
					<Abstract type="html">The maxiumum number of results to return.  It is
                        possible to receive fewer than this because of the 
                        radius and because of server limits.</Abstract>
				</Parameter><Parameter>
					<Name>searchText</Name>
					<Abstract type="html">The text to use in the query to narrow the set of places
                        returned.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startWithGraphPath:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startWithGraphPath:(NSString *)graphPath completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>graphPath</Name>
					<Abstract type="html">The Graph API endpoint to use for the request, for example &quot;me&quot;.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startWithGraphPath:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPostWithGraphPath:graphObject:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPostWithGraphPath:(NSString *)graphPath graphObject:(id&lt;FBGraphObject&gt;)graphObject completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>graphPath</Name>
					<Abstract type="html">The Graph API endpoint to use for the request, for example &quot;me&quot;.</Abstract>
				</Parameter><Parameter>
					<Name>graphObject</Name>
					<Abstract type="html">An object or open graph action to post.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPostWithGraphPath:graphObject:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startWithGraphPath:parameters:HTTPMethod:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startWithGraphPath:(NSString *)graphPath parameters:(NSDictionary *)parameters HTTPMethod:(NSString *)HTTPMethod completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>graphPath</Name>
					<Abstract type="html">The Graph API endpoint to use for the request, for example &quot;me&quot;.</Abstract>
				</Parameter><Parameter>
					<Name>parameters</Name>
					<Abstract type="html">The parameters for the request. A value of nil sends only the automatically handled parameters, for example, the access token. The default is nil.</Abstract>
				</Parameter><Parameter>
					<Name>HTTPMethod</Name>
					<Abstract type="html">The HTTP method to use for the request. A nil value implies a GET.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startWithGraphPath:parameters:HTTPMethod:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/setIsResultFromCache:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>FBRequestConnection+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL isResultFromCache</Declaration>
			
			
			<Anchor>//api/name/isResultFromCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/FBRequestConnection/isResultFromCache</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>FBRequestConnection+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL isResultFromCache</Declaration>
			
			
			<Anchor>//api/name/isResultFromCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/startWithCacheIdentity:skipRoundtripIfCached:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>FBRequestConnection+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)startWithCacheIdentity:(NSString *)cacheIdentity skipRoundtripIfCached:(BOOL)consultCache</Declaration>
			
			
			<Anchor>//api/name/startWithCacheIdentity:skipRoundtripIfCached:</Anchor>
		</Token>
		
	</File>
</Tokens>