<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/FBSBJsonParser.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/FBSBJsonParser</TokenIdentifier>
			<Abstract type="html">The JSON parser class.

JSON is mapped to Objective-C types in the following way:

@li Null -&gt; NSNull
@li String -&gt; NSMutableString
@li Array -&gt; NSMutableArray
@li Object -&gt; NSMutableDictionary
@li Boolean -&gt; NSNumber (initialised with -initWithBool:)
@li Number -&gt; NSDecimalNumber

Since Objective-C doesn&apos;t have a dedicated class for boolean values, these turns into NSNumber
instances. These are initialised with the -initWithBool: method, and
round-trip back to JSON properly. (They won&apos;t silently suddenly become 0 or 1; they&apos;ll be
represented as &apos;true&apos; and &apos;false&apos; again.)

JSON numbers turn into NSDecimalNumber instances,
as we can thus avoid any loss of precision. (JSON allows ridiculously large numbers.)</Abstract>
			<DeclaredIn>FBSBJsonParser.h</DeclaredIn>
			
			<NodeRef refid="30"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBSBJsonParser/fragmentWithString:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>FBSBJsonParser.h</DeclaredIn>			
			
			<Declaration>- (id)fragmentWithString:(id)repr</Declaration>
			
			
			<Anchor>//api/name/fragmentWithString:</Anchor>
		</Token>
		
	</File>
</Tokens>